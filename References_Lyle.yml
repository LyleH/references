####DOCKER####
#WMS STAGING
ssh -A toor@hq-stage-docker01.stagealot.com
ssh -A toor@hq-stage-docker02.stagealot.com
ssh -A toor@hq-stage-docker03.stagealot.com

#DVT STAGING
ssh -A toor@hq-stage-docker06.stagealot.com

#LYLE STAGING
ssh -A toor@hq-stage-docker07.stagealot.com
admin.wms-docker2.env/s3cret/admin/
dashboard.wms-docker6.env/
http://www.lyle.env/


https://dashboard.wms-docker6.env

#PERFORMANCE STAGING
ssh -A toor@hq-stage-docker06.stagealot.com
Password - MokotAs7

# cd /home/toor/workspace...

# cd/workspace/dev-environments/docker
docker-machine rm default
./bin/configure.py

# cd/workspace/dev-environments/docker/collections
source compose.env

# cd/workspace/dev-environments/docker/collections
docker-machine env default
eval $(docker-machine env default)
docker ps
docker-compose pull
docker-compose up

# check logs
docker -H hq-stage-docker02:4243 logs [container]

# useful commands
sudo killall -HUP mDNSResponder
docker logs -f wmsstaging_wmsapi_1
docker logs wmsstaging_wmsapi_1 2>&1 | grep "829414π3"
docker-compose stop admin
docker-compose up --force-recreate admin

docker-machine upgrade default

# Linux bringing up container up
source compose-custom.env
export ENV_NAME='doker06'
export WORKSPACE=$(cd ../../../ && echo $PWD)
export COMPOSE_FILE=docker-compose.yml:dev.yml
which docker-machine &>/dev/null && eval $(docker-machine env default)

#debugging container
docker inspect <id|name>

#Installing docker-compose (linux, it is installed bt default on MAC and Windows)
$ curl -L https://github.com/docker/machine/releases/download/v0.8.2/docker-machine-`uname -s`-`uname -m` >/usr/local/bin/docker-machine && \
  chmod +x /usr/local/bin/docker-machine
sudo apt-get install python-pip
sudo pip install docker-compose
####DOCKER####

####GIT WORKFLOW BIBLE####
#make new branchno 
git checkout -b MYBRANCH
# make your changes and commit to local branch
git add . #adds all chnages
git add specifyfile # adds a single files
git commit #you will be prompted for a commit message, keep it short but informative
# push to your remote branch
git push --set-upstream origin MYBRANCH
git push
# view differences between your branch and master
git diff origin/MYBRANCH..origin/master
# pull master into your branch
git status
git branch --set-upstream-to=origin/master wms-931
# rebase master into your branch (because they have diverged)
git pull --rebase origin master
git status
# remove all unstaged changes
git checkout -- .
git status
git rebase -i HEAD~3 #squash all your commits into 1, cleaner. 3 = number of commits, change accordingly
git status
git push origin HEAD:MYBRANCH -f
git push origin HEAD:master
# delete a local git branch using:
git branch -d MYBRANCH
# delete a remote branch using:
git push origin --delete MYBRANCH

#you can increase and reduce of depth of clone
git fetch --depth=1000000
#SET EDITOR IN LINUX$ sudo update-alternatives –config editor

There are 5 alternatives which provide `editor’.
Selection Alternative
———————————————–
1 /usr/bin/vim
2 /bin/ed
*+ 3 /bin/nano
4 /usr/bin/vim.basic
5 /usr/bin/vim.tiny
Press enter to keep the default[*], or type selection number:

#issues with identity
git config --global user.email "lyle.henkeman@takealot.com"
git config --global user.name "LyleH"

####GIT WORKFLOW BIBLE####

####MySQL####
ssh toor@hq-mysql01-nightly.stagealot.com
ssh toor@hq-mysql02-weekly.stagealot.com
var/lib/mysql/mysqlb/hq-mysql02-weekly.log

mysql -h db.mysql.env -u take2_bespoke catalogue -p

mysql -u DBUSER -h DBSERVERNAME -p
mysql -uroot -pt4k32_b3sp0k3 -h10.0.1.54
mysql -uroot -pt4k32_b3sp0k3 -h10.0.1.56
host: 10.4.1.31
user: take2_bespoke
database: take2
password: t4k32_b3sp0k3
port: 3306

Password - MokotAs7
mysql> delete from productlines where idproductline = 34181661;
mysql> select * from productlines where idproductline = 34181661;

SHOW OPEN TABLES;
SHOW ENGINE INNODB STATUS;
show processlist;
####MySQL####

####MongoDB####
ssh toor@hq-mongo01-nightly.stagealot.com
ssh -A toor@hq-mongo01.stagealot.com
ping 10.4.1.31
netstat -nr
sudo route add default gw 10.0.12.1
####MongoDB####

####BUST CATALOGUE CACHE####
#check it first
curl http:# taljenkins01.stagealot.com:8000/rest/productlines/40365199 | python -m json.tool | grep is_liquor

#Bust it with Varnish
curl http:# taljenkins01.stagealot.com:8000/rest/cache-invalidate/varnish/productline/40365199/productline

#Continous grep
tail -f services.catalogue8000.error.log | grep --40650434
####BUST CATALOGUE CACHE####

####NGINX####
sudo ls nginx/
toor@www:/var/log$ sudo tail nginx/access.log
sudo tail nginx/php.errors.log
####NGINX####

####ORDER FULFILLMENT MANUALLY####
(venv) toor@wmsapi:/usr/local/tal/tal/tal/services/orders/bin$ export PYTHONPATH=/usr/local/tal/tal
(venv) toor@wmsapi:/usr/local/tal/tal/tal/services/orders/bin$ source /usr/local/tal/tal/venv/bin/activate
(venv) toor@wmsapi:/usr/local/tal/tal/tal/services/orders/bin$ export ROLE=DEV
# add idorder to fileπ''
(venv) toor@wmsapi:/usr/local/tal/tal/tal/services/orders/bin$ vi orders.csv
python fulfill_orders_from_csv.py orders.csv
####ORDER FULFILLMENT MANUALLY####

####KAFKA####
cat /etc/supervisor/conf.d/services.wms.conf
toor@wmsapi:/usr/local/tal/tal$ pip freeze | grep kakfa
pip install -r requirements.txt
####KAFKA####

####PRODUCTION ACCESS####
#Jumpbox
ssh -A lylehenkeman@jump-box.takealot.com

$product db
  five past doctor take
mysql -h 10.2.17.240 -u tal-ro -p take2

#Admin
 curl -v --user 'Lyle.Henkeman:antiqueclient90' "https:// admin.takealot.com/s3cret/admin/index.php"

####PRODUCTION ACCESS####

####LEAPVE PORTAL####
https:// esscloud.sagevip.co.za/AXIOMATIC/
Lyle.Henkeman
Takealot!
####LEAVE PORTAL####

####RABBIT MQ####
URL:taljenkins01.stagealot.com:15672
user: wms
password: wms
sudo -i
sudo rabbitmq status
rabbitmqctl stop_app
sudo rabbitmqctl start_app
#list rabbit hosts
rabbitmqctl list_vhosts
ps waux | grep rabbit
ps -ef | grep rabbit
ps waux | grep rabbit
rabbitmqctl list_queues
watch -n1 rabbitmqctl list_queues
watch -n0.5 rabbitmqctl list_queues
# watch a specific queue
watch -n1 rabbitmqctl list_queues -p wms
# rabbit UI
http:# localhost:15672/
####RABBIT MQ####

####TEST SICK MESSAGES INTEGRATION####
cd /usr/local/tal/s4f-wms-sick-service/bin
history
ifconfig
cd /usr/local/tal/s4f-wms-sick-service/bin
ls
python test_public_http_endpoint.py
source virtualenvs/bin/activate
python test_public_http_endpoint.py

http:# 10.0.15.222:5332/public/v-0-1-21/wms-sick/errors
####TEST SICK MESSAGES INTEGRATION####

####TEST LOGIN####
user_name: dev+1@take2.co.za
password:  test
####TEST LOGIN####

####VAGRANT ENVIRONMENTS####
Front_end
http:# www.wms.env/
Back_end
https:# admin.wms.env/s3cret/admin/index.php
User Lyle.Heneman updated with password antiqueclient90

Authorization
https:# admin.wms.env/s3cret/admin/users/index.php
Dashboard
http:# tal.wms.env:8080/
Seller_portal
http:# tal.wms.env:8822/seller_select

Stagealot
Front_end
http:# www.stagealot.env/
Back_end
https:# admin.stagealot.env/s3cret/admin
Authorization
https:# admin.stagealot.env/s3cret/admin/users/index.php
Dashboard
https:# dashboard.stagealot.env

ssh -A wms@10.0.14.4
Password - MokotAs7

ssh -A toor@dashboard.stagealot.env
ssh -A toor@taljenkins01.stagealot.com

virtualenv --python /usr/local/src/python-2.7.9/bin/python  venv

# Increase size of guest VirtualBox guest
sudo VBoxManage modifyhd /Users/lyle/VirtualBox\ VMs/WMS_Linux/WMS_Linux.vdi --resize 40000
pip install requirements.txt -e .
toor@consumer-app:/usr/local/tal/consumer_app$ virtualenv --python /usr/local/src/python-2.7.9/bin/python  venv
. venv/bin/activate
pip install -e .
export ROLE=DEV
consumer_app
cd etc/supervisor
vi service.conf
cd /etc/supervisor/conf.d/
sudo ln -s /usr/local/tal/consumer_app/etc/supervisor/service.conf consumer_app.conf
vi consumer_app.conf

toor@s4f-services:/usr/local/tal/s4f-wms-sick-service$ mv virtualenvs/ virtualenvs.for-python-2.7.3
toor@s4f-services:/usr/local/tal/s4f-wms-sick-service$ virtualenv -p /usr/local/src/python2.7.9/bin/python virtualenvs
toor@s4f-services:/usr/local/tal/s4f-wms-sick-service$ . virtualenvs/bin/activate
(virtualenvs) toor@s4f-services:/usr/local/tal/s4f-wms-sick-service$ python --version
Python 2.7.9

toor@s4f-services:/usr/local/tal/s4f-wms-sick-service$ pip install -e .
Obtaining file:# /workspace/s4f-wms-sick-service

move cd /etc /supervisor to conf.d
deactivate and reactivate vm
sudo apt-get install libffi-dev

toor@s4f-services:/usr/local/tal/s4f-wms-sick-service/virtualenvs$ cd ..
toor@s4f-services:/usr/local/tal/s4f-wms-sick-service$ ls
AUTHORS.md  HISTORY.md  README.md  bin  etc  scripts  setup.py  tests  virtualenvs  wms_sick_service  wms_sick_service.egg-info
toor@s4f-services:/usr/local/tal/s4f-wms-sick-service$ . virtualenvs/bin/activate
(virtualenvs) toor@s4f-services:/usr/local/tal/s4f-wms-sick-service$ . virtualenvs/bin/activate^C
(virtualenvs) toor@s4f-services:/usr/local/tal/s4f-wms-sick-service$ generate_proto
Compiling protobufs in:
/workspace/s4f-protocol-buffers
####VAGRANT ENVIRONMENTS####

####PYTHON UNIT TESTS VAGRANT####
Run_python_unit_tests
python -m unittest test_module.TestClass.test_method
####PYTHON UNIT TESTS VAGRANT####

####ADMIN USER_ROLE HACK DEV####
#To make your USER_ROLE work 
cd /workspace/tal_backend/docroot/s3cret/admin/vieworder.php
on line 2052 change 

if (\tal\model\UserRole::isUserInRole($loggedin, \tal\model\UserRole::ROLE_AUTH_ADMINSTRATOR)) { ?>
to
if (1==1) { ?>

and in 

cd /workspace/tal_backend/docroot/s3cret/admin/auth.php
on line 20 change

if (!\tal\model\UserRole::isUserInRole($loggedin, \tal\model\UserRole::ROLE_AUTH_ADMINSTRATOR)) {
to
if (1!=1) {
####ADMIN USER_ROLE HACK DEV####

####SERVER SPECS####
#specs
sudo lshw -short
#linux version
lsb_release -a

#amount of lines in file
wc -l file
####SERVER SPECS****

####JAVA####
http://askubuntu.com/questions/84483/how-to-completely-uninstall-java
#Intall JAVA on Ubuntu
 wget --header "Cookie: oraclelicense=accept-securebackup-cookie" http://download.oracle.com/otn-pub/java/jdk/8u5-b13/jdk-8u5-linux-x64.tar.gz
#follow wiki
https://www.digitalocean.com/community/tutorials/how-to-manually-install-oracle-java-on-a-debian-or-ubuntu-vps
vim ~/.bash_profile
export JAVA_HOME=$(/usr/libexec/java_home)
source ~/.bash_profile
echo $JAVA_HOME
####JAVA####

####JENKINS####
#building a new docker image
http://hq-docker01:8080/
#nacigate and click on the service / image in question
#click build with parameters
# in 'repository' add the repo you want for example: s4f-seller-message-service. see the following error:
# ERROR: Error: image takealot/s4f-seller-message-service:latest not found

####zshrc####
~/.zshrc
####zshrc####

####BREW####
brew cask uninstall virtualbox
brew cask install virtualbox
brew install docker
brew install boot2docker
boot2docker init
boot2docker up

####Pipe Linux#####
#The standard output stream will be copied to the file, it will still be visible in the terminal. If the file already exists, it gets overwritten.
command | tee output.txt

####JVM####
##   Environment variables:
VM_ARGS - optional java args, e.g. -Dprop=val

JVM_ARGS="-Xms512m -Xmx512m" jmeter.sh etc.
####JVM####

####KAFKA#####
docker build -t tal_kafka_rest_proxy:latest .
####KAFKA#####

####LOGFIRE####
PP
Host: b1ppsftp.logfireapps.com
User: takealot_pp_if
Pass: 2Frdd8vU
Port: 22
 
UAT
Host: uatsftp.logfireapps.com
User: takealot_uat_if
Pass:  (|EP4).C
Port 22
 
User ID : takealot_if
Password: Pt8e$d7W
Remote Host: b1sftp.logfireapps.com
Remote Port: 22
 
Putty:
Putty UAT
 "C:\Program Files\Logfire\putty.exe" -ssh takealot_uat_rf@uat.logfireapps.com  -pw AN!&v*o)
 ####LOGFIRE####

####JENKINS####
sudo apt-get aptitude install python-pip python-virtualenv

# install pip and virtaulenv
install nose-pip python-virtualenv

# set variable
venv="${WORKSPACE}"/.venv
 
# delete folder and content if exists
if [ -d "$venv" ]; then
	#rm -fr "$venv"
    echo "IT EXISTS"
fi

# create new virtualenv
virtualenv --no-site-packages "$venv"

# activate virtualenv
. "$venv"/bin/activate
 

# install requirements
pip install bin/dependencies/MySQL-python-1.2.4c1.zip
pip install -r requirements.txt -i https://admin:GIXsa5sDvejKfy9IGnhD@pypi.takealot.com/pypi/
pip install --upgrade html5lib==1.0b8

# set up roles
cd tal/services/orders/test/
pwd 
ls -la


export ROLE=DOCKER
export PYTHONPATH= tal/


nosetests -with-xunit -v /tal/services/orders/test "*test_client*"
#python -m unittest discover  #./tal/services/orders/test/test "TestOrdersServiceClientTest"
####JENKINS####

####LINUX DOCKER ISSUES###
Docker Linux tends to come back with a lot more issues than OSX, here are some:

FRONTEND
- Ensure symlinking
cd ~/workspace/tal_frontend/etc/app
ln -s config.docker.php config.php
 
cd ~/workspace/core/etc/app
ln -s config.docker.ini config.ini

cd ~/workspace/tal_frontend/docroot-ssl

ln -s ../docroot/static
- You may have provisioned the machine as root, then you won't be able to access site. Add the "IP" and env details to your /etc/hosts file
10.4.1.57 www.wms-docker6.env root.env

ADMIN
- Ensure symlinking
cd ~/workspace/tal_backend/docroot/inc
ln -s config.env.php config.php

Also ensure that the Linux server does not have APACHE or NGINX on it!!!!!!
####LINUX DOCKER ISSUES###

export _JAVA_OPTIONS="-Xms1024m -Xmx2048m"                                                                                ✓  10048  21:04:08
 lyle@Lyle-Henkeman  ~/Downloads  export _JAVA_OPTIONS="-XX:PermSize=128m -XX:MaxPermSize=256m"


 1. Java Memory Overview
A quick review of Java memory structure :

1. Java Heap Size
Place to store objects created by your Java application, this is where Garbage Collection takes place, the memory used by your Java application. For a heavy Java process, insufficient Heap size will cause the popular java.lang.OutOfMemoryError: Java heap space.

-Xms<size> - Set initial Java heap size
-Xmx<size> - Set maximum Java heap size

$ java -Xms512m -Xmx1024m JavaApp
2. Perm Gen Size
Place to store your loaded class definition and metadata. If a large code-base project is loaded, the insufficient Perm Gen size will cause the popular Java.Lang.OutOfMemoryError: PermGen.

-XX:PermSize<size> - Set initial PermGen Size.
-XX:MaxPermSize<size> - Set the maximum PermGen Size.

$ java -XX:PermSize=64m -XX:MaxPermSize=128m JavaApp


pip list | grep pyexcel
find /usr/local/lib/ -name "*pyexcel*"


####LARGEST FILES IN LINUX####
To find the largest 10 files (linux/bash):

find . -type f -print0 | xargs -0 du | sort -n | tail -10 | cut -f2 | xargs -I{} du -sh {}

To find the largest 10 directories:

find . -type d -print0 | xargs -0 du | sort -n | tail -10 | cut -f2 | xargs -I{} du -sh {}
####LARGEST FILES IN LINUX####


####KUBERNETES####
#A node is a VM or a physical computer that serves as a worker machine in a Kubernetes cluster.

#Minikube is a lightweight Kubernetes implementation that creates a VM on your local machine and deploys a simple cluster containing only one node.

#get minikuber version
minikube version


#cluster versions
kubectl version

#cluster info
kubectl cluster-info

#node info
kubectl get nodes

#deploy
kubectl run kubernetes-bootcamp --image=docker.io/jocatalin/kubernetes-bootcamp:v1 --port=8080

#see deployments
kubectl get deployments

#Get the name of the Pod and store it in the POD_NAME environment variable:
export POD_NAME=$(kubectl get pods -o go-template --template '{{range .items}}{{.metadata.name}}{{"\n"}}{{end}}')
echo Name of the Pod: $POD_NAME

#curl it
curl http://localhost:8001/api/v1/proxy/namespaces/default/pods/$POD_NAME/

#Kubernetes Pods
#represents a group of one or more application containers
#Shared storage, as Volumes
#Networking, as a unique cluster IP address
#Information about how to run each container, such as the container image version or specific ports to use

#Kubelet: a process responsible for communication between the Kubernetes Master and the Nodes; it manages the Pods and the containers running on a machine.

#kubectl commands
kubectl get - list resources
kubectl describe - show detailed information about a resource
kubectl logs - print the logs from a container in a pod
kubectl exec - execute a command on a container in a pod

##kubectl pod commands
kubectl get pods -l run=kubernetes-bootcamp
kubectl get services -l run=kubernetes-bootcamp
export POD_NAME=$(kubectl get pods -o go-template --template '{{range .items}}{{.metadata.name}}{{"\n"}}{{end}}')
echo Name of the Pod: $POD_NAME
kubectl label pod $POD_NAME app=v1
kubectl describe pods $POD_NAME
ubectl get pods -l app=v1

#scale up
kubectl get deployments
kubectl scale deployments/kubernetes-bootcamp --replicas=4
kubectl get deployments
kubectl get pods -o wide
kubectl describe deployments/kubernetes-bootcamp
kubectl describe services/kubernetes-bootcamp
export NODE_PORT=$(kubectl get services/kubernetes-bootcamp -o go-template='{{(index .spec.ports 0).nodePort}}')
echo NODE_PORT=$NODE_PORT
curl host01:$NODE_PORT

#scale down
kubectl scale deployments/kubernetes-bootcamp --replicas=2
kubectl get deployments
kubectl get pods -o wide

#Kubernetes Takealot
#Bring up minikube
cd ~/workspace/dev-environments/kubernetes-environments
./bin/start-minikube.sh
 
# check on when its up
kubectl get pods -owide
 
#create your service
kubectl create -f environment/roles/statsd
kubectl create -f environment/roles/graphite
kubectl create -f environment/roles/grafana
kubectl create -f environment/roles/cart-service
kubectl create -f environment/roles/wishlist-service

# expose it onto our localhost
./bin/expose.sh
#or
./bin/expose.sh catalogue-service 1234

#kubernetes dashboard
kubectl --context admin@kubernetes proxy
#access it at http://localhost:8001/ui

#check running pods
kubectl get pods -owide
NAME                                    READY     STATUS    RESTARTS   AGE       IP            NODE
cart-service-2994544000-rsdm5           1/1       Running   0          18m       172.17.0.11   minikube

#List Pods In All Namespaces
kubectl get pods --all-namespaces

#tail logs
stern frontend

#replace a service / deployment
kubectl replace -f environment/roles/

#stop and start pods
kubectl delete pod <pod-name>
kubectl create pod <pod-name>
#or
#delete all pods
kubectl delete pods --all

#inside a pod
kubectl exec <pod-name> -ti -- bash
#Run the following bash command
dig SRV take2.mysql.stagealot.com

#start minikube
minikube stop
minikube start

#curl
curl promise-date.kubernetes.env:<YOUR_PORT>/order/<YOUR_ORDER>

#dig
dig SRV _http._tcp.cart-service.stagealot.com

#office env
#replace kubectl in 

####KUBERNETES####

####ZipKin####
brew install gofabric8
git checkout git@github.com:LyleH/kubernetes-zipkin.git
kubectl create -f http://repo1.maven.org/maven2/io/fabric8/zipkin/zipkin-starter/

#The storage requires a persistence volume for mysql
gofabric8 volumes

#startup zipkin console
minishift service zipkin
####ZipKin####


####NGROK####
ngrok http 80
####NGROK####